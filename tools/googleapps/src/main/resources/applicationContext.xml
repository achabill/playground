<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />
	<context:property-placeholder location="googleapps.properties" />

	<!-- application -->

	<context:component-scan
		base-package="de.tbosch.tools.googleapps.dao,de.tbosch.tools.googleapps.service,de.tbosch.tools.googleapps.controller,de.tbosch.tools.googleapps.scheduler" />

	<bean id="calendarService" class="com.google.gdata.client.calendar.CalendarService">
		<constructor-arg value="googleapps" />
	</bean>

	<bean id="googleAppsThread" class="de.tbosch.tools.googleapps.GoogleAppsThread" />
	<bean id="imageIconOnline" class="javax.swing.ImageIcon">
		<constructor-arg type="java.net.URL" value="classpath:/${image.online}" />
	</bean>
	<bean id="imageIconOffline" class="javax.swing.ImageIcon">
		<constructor-arg type="java.net.URL" value="classpath:/${image.offline}" />
	</bean>
	<bean id="imageOnline" factory-bean="imageIconOnline" factory-method="getImage" />
	<bean id="imageOffline" factory-bean="imageIconOffline" factory-method="getImage" />
	<bean id="trayIcon" class="de.tbosch.tools.googleapps.gui.JXTrayIcon" destroy-method="dispose">
		<constructor-arg ref="imageOffline" />
	</bean>

	<bean class="de.tbosch.commons.database.HsqlServerBean">
		<property name="serverProperties">
		>>>>>>> refs/remotes/origin/master	<props>
				<prop key="server.port">9101</prop>
				<prop key="server.database.0">googleappsdb</prop>
			</props>
		</property>
	</bean>

	<!-- resources -->

	<bean id="resourceBundleMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>

	<!-- persistence -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="de.tbosch.tools.googleapps.model" />
		<property name="schemaUpdate" value="true" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl}</prop>
				<prop key="hibernate.connection.release_mode">on_close</prop>
			</props>
		</p>>>>>>> refs/remotes/origin/masterroperty>
	</bean>
	<tx:annotation-driven />
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- dao exception translation -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- Timers -->
	<task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
	<task:executor id="myExecutor" pool-size="5" />
	<task:scheduler id="myScheduler" pool-size="10" />

</beans>